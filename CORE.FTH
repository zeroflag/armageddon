: begin here ; immediate: again lit branch , here - , ; immediate: until lit branch0 , here - , ; immediate: while lit branch0 , here 0 , ; immediate: repeat swap lit branch , here - , here over - swap ! ; immediate: if lit branch0 , here 0 , ; immediate: else lit branch , here 0 , swap here over - swap ! ; immediate: then here over - swap ! ; immediate: nip swap drop ;: -rot rot rot ;: ?dup dup if dup then ;: 2dup over over ;: % /mod drop ;: / /mod nip ;: > swap < ;: = 2dup < invert -rot swap < invert and ;: >= < invert ;: <= swap < invert ;: ( begin key 41 = until ; immediate: variable    word mkhdr    48016 , 1024 , 58367 ,    lit lit ,    here 4 + ,    lit exit , 0 , ;: . ( n -- )    dup 0 < if 45 emit 65535 * then    10 /mod ?dup if . then    48 + emit ;variable test-var: self-test ( -- )    44 -2 + test-var !    100 21    begin      46 emit      1 -      swap 1 - swap      dup 0 =    until    32 emit + emit    0    begin      dup 20 <    while      1 +    repeat    3 * 10 + 5 - dup 64 > swap 66 < and if      175 100 % emit    then     10 0 * if else 32 emit 45 emit 32 emit test-var @ . then ;( *** Running self tests *** )1 . self-test2 . self-test3 . self-testdepth .quit